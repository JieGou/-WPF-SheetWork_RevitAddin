<Page
    x:Class="SheetWork.Views.Pages.SheetTablePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pages="clr-namespace:SheetWork.Views.Pages" xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:sh="http://sheet.com/xaml"
    xmlns:validators="clr-namespace:SheetWork.Views.ValidationRules"
    Title="SheetTablePage"
    d:DataContext="{d:DesignInstance pages:SheetTablePage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="450"
    d:DesignWidth="800"
    sh:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    sh:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Unloaded">
            <i:InvokeCommandAction Command="{Binding ViewModel.UnRegisterEventCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <sh:ThemesDictionary Theme="Light" />
                <sh:ControlsDictionary />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Page.Resources>
    <Grid Margin="32">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <sh:DataGrid
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            IsReadOnly="True"
            ItemsSource="{Binding ViewModel.ProjectSheets, UpdateSourceTrigger=PropertyChanged}">

            <sh:DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Resources>
                        <SolidColorBrush x:Key="ReadOnlyTextBrush" Color="#B3DCDCDC" />
                    </Style.Resources>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ReadOnlyTextBrush}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </sh:DataGrid.RowStyle>
            <sh:DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem
                        Command="{Binding ViewModel.CopySelectedSheetCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                        Header="Copy" />
                    <MenuItem
                        Command="{Binding ViewModel.RenameSelectedSheetCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                        Header="Rename" />
                    <MenuItem
                        Command="{Binding ViewModel.DeleteSelectedSheetCommand}"
                        CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
                        Header="Delete" />
                </ContextMenu>
            </sh:DataGrid.ContextMenu>
        </sh:DataGrid>
        <Grid
            Grid.Row="0"
            Grid.Column="1"
            Margin="10,0,0,0">
            <StackPanel>
                <Label
                    HorizontalAlignment="Center"
                    Content="Sheet Properties"
                    FontSize="18" />
                <Label
                    HorizontalAlignment="Center"
                    Content="Rename"
                    FontSize="16" />
                <Label
                    Margin="5,0,0,0"
                    HorizontalAlignment="Left"
                    Content="Suffix"
                    FontSize="14" />
                <sh:TextBox Text="{Binding ViewModel.Suffix, UpdateSourceTrigger=PropertyChanged}" />
                <Label
                    Margin="5,10,0,0"
                    HorizontalAlignment="Left"
                    Content="Prefix"
                    FontSize="14" />
                <sh:TextBox Text="{Binding ViewModel.Prefix, UpdateSourceTrigger=PropertyChanged}" />
                <Label
                    Margin="5,10,0,0"
                    HorizontalAlignment="Left"
                    Content="Sheet Number"
                    FontSize="14" />
                <sh:TextBox>
                    <sh:TextBox.Text>
                        <Binding Path="ViewModel.Number" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validators:IsSheetNumberExist />
                            </Binding.ValidationRules>
                        </Binding>
                    </sh:TextBox.Text>
                    <Validation.ErrorTemplate>
                        <ControlTemplate>
                            <DockPanel>
                                <Border BorderBrush="Red" BorderThickness="1">
                                    <AdornedElementPlaceholder x:Name="controlWithError" />
                                </Border>
                                <TextBlock
                                    Margin="3,0,0,0"
                                    FontFamily="Segoe UI"
                                    FontSize="20"
                                    Foreground="Red">
                                    !
                                </TextBlock>
                            </DockPanel>
                        </ControlTemplate>
                    </Validation.ErrorTemplate>
                </sh:TextBox>
            </StackPanel>

            <sh:Button
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                Command="{Binding ViewModel.ExportToExcelCommand}"
                Content="Export To Excel" />
        </Grid>


    </Grid>
</Page>
